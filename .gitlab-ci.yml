maven build:
  stage: build
  image: maven:3.8-openjdk-8-slim
  script:
    - mvn package -Dmaven.test.skip=true
  ## 在不同的STAGE传输文件
  artifacts:
    paths:
      - target/*.jar

docker build and push:
  stage: test
  image: docker:stable
  before_script:
    - echo "before docker build and push "
    ## 打印GIT 提交的版本号
    - echo $CI_COMMIT_SHA
  script:
    - ls -al

    - docker build -t $REGISTRY_DOMAN/danya/demo-0.0.2.jar:$CI_COMMIT_SHA .
    ## 登录到HARBOR
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY_DOMAN
    ## 推送到DOCKER私仓
    - docker push  $REGISTRY_DOMAN/danya/demo-0.0.2.jar:$CI_COMMIT_SHA
    - echo " push success !"


do task:
  stage: test
  script:
    - echo "Do another parallel test here"
    - echo "For example run a lint test"

k8s deploy:
  stage: deploy
  image: istio/kubectl:1.5.10
  script:
    - apt-get update && apt-get install -y gettext-base
    - mkdir $HOME/.kube && cat $KUBE_CONFIG > $HOME/.kube/config
    - export NAMESPACE=xiaopang
    - export REPLICAS=2
    - export IMAGE=$REGISTRY_DOMAN/danya/demo-0.0.2.jar:$CI_COMMIT_SHA
    - envsubst < deploy.yaml | kubectl apply -f -
    ## - kubectl -n xiaopang patch deployment nginx-xiaopang-deployment -p '{"spec":{"template":{"spec":{"containers":[{"name":"demon","image":harbor.sunvalley.com.cn/danya/demo-0.0.2.jar:$CI_COMMIT_SHA,"env":[{"name":"RESTART_TIME","value":"'$(date +%s)'"}]}]}}}}'
